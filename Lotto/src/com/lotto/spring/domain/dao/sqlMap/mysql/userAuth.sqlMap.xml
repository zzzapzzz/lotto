<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">  
  
<mapper namespace="userAuthMapper">
	
	<!-- 회원정보 조회 -->	
	<select id="getUserInfo" parameterType="java.util.Map" resultType="com.lotto.spring.domain.dao.UserSession">
		/* userAuth.getUserInfo */
		SELECT 
			  user_no
			, email
			, nickname
			, grade
			, point
			, used_point
			, mbtlnum
			, thwd			
			, thwd_q			
			, thwd_a			
			, rcmd_user_no
			, svc_agree_yn
			, login_fail_cnt
			, ifnull(use_yn, 'N') use_yn
			, auth_task
			, auth_menu
			, cr_dt
			, up_dt
		FROM tb_user_info		
		WHERE 1=1
		<if test='email != null and email != ""'>
		AND email = #{email}
		</if>
		<if test='user_no != null and user_no != ""'>
		AND user_no = #{user_no}
		</if>
	</select>
	
	<!-- 사용자별 메뉴접근 URL 정보 조회 -->
	<select id="getMenuAuthUrlList" resultType="org.apache.commons.collections.map.CaseInsensitiveMap" parameterType="java.lang.String">
		/* userAuth.getMenuAuthUrlList */
		select tmi.menu_id
				, tmi.p_menu_id
				, tmi.menu_nm
		        , CASE 
					WHEN tmi.p_menu_id = 0 THEN 'P'
					ELSE 'C'
		          END as m_type
		        , tmi.menu_url
		        , tmi.lna_element
		from tb_menu_info tmi
		<if test='isAdmin != null and isAdmin == false'>
		inner join (
			select auth_cd, menu_id
			from tb_menu_authinfo
			where use_yn = 'Y'
			and auth_cd = (
							SELECT auth_task 
		                    FROM tb_user_info
		                    WHERE user_no = #{userNo}
							)
		) tmai ON tmai.menu_id = tmi.menu_id
		</if>
		where tmi.menu_id != 0
		AND tmi.use_yn = 'Y'
		order by tmi.menu_id
	</select>
	
	<!-- 일반 사용자 메뉴접근 URL 정보 조회 -->
	<select id="getMenuAuthUrlListForUser" resultType="org.apache.commons.collections.map.CaseInsensitiveMap" parameterType="java.lang.String">
		/* userAuth.getMenuAuthUrlListForUser */
		select tmi.menu_id
				, tmi.p_menu_id
				, tmi.menu_nm
		        , CASE 
					WHEN tmi.p_menu_id = 0 THEN 'P'
					ELSE 'C'
		          END as m_type
		        , tmi.menu_url
		        , tmi.lna_element
		from tb_menu_info tmi		
		where tmi.menu_id != 0
		AND tmi.use_yn = 'Y'
		<if test='isAdmin != null and isAdmin == false'>
		AND tmi.common_yn = 'Y'
		</if>
		order by tmi.menu_id
	</select>
	
	<!-- 사용자 로그 등록 -->
	<insert id="insertLogAgent" parameterType="java.util.Map">
		INSERT INTO TB_LOG_ACCESS
		(
			yyyymmdd, 
			hhmmss, 
			log_type, 
			user_no,
			access_ip, 
			msg_s, 
			msg_l
		)
		VALUES
		(
			DATE_FORMAT(NOW(), '%Y%m%d'), 
			DATE_FORMAT(NOW(), '%H%i%s'), 
			#{log_type}, 
			#{user_no},
			#{user_ip},
			#{msg_s},
			#{msg_l}
		)
	</insert>
	
	<!-- 사용자 초기정보 등록 -->
	<update id="setUserInfo" parameterType="java.util.Map">
		UPDATE tb_user_info
		SET up_dt = DATE(NOW()),
			thwd = #{thwd},
			thwd_q = #{thwd_q},
			thwd_a = #{thwd_a}
		WHERE email = #{email}
	</update>
	
	<!-- 사용자 비밀번호 변경 -->
	<update id="changeThwd" parameterType="java.util.Map">
		UPDATE tb_user_info
		SET up_dt = DATE(NOW()),
			thwd = #{thwd},
			login_fail_cnt = 0
		WHERE email = #{email}
	</update>
	
	<!-- 이메일 중복 체크 -->
	<select id="checkDuplEmail" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*)
		FROM tb_user_info
		WHERE email = #{email}
	</select>
	
	<!-- 사용자 등록여부 체크 (naver) -->
	<select id="checkDuplNaver" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*)
		FROM tb_user_info_naver
		WHERE user_id = #{user_id}
	</select>
	
	<!-- 사용자 등록여부 체크 (kakao) -->
	<select id="checkDuplKakao" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*)
		FROM tb_user_info_kakao
		WHERE user_id = #{user_id}
	</select>
	
	<!-- 권한체크 -->
	<select id="checkAuth" parameterType="java.util.Map" resultType="int">
		SELECT
			COUNT(1)
		FROM tb_menu_authinfo MA
		LEFT OUTER JOIN tb_menu_info MI ON MA.MENU_ID = MI.MENU_ID AND MI.USE_YN = 'Y'
		WHERE MA.AUTH_CD = (
			SELECT AUTH_TASK
			FROM tb_user_info
			WHERE USER_NO = #{userNo}
			LIMIT 1
		)
		AND MI.MENU_URL = #{menuUrl}
		AND MA.USE_YN = 'Y'
	</select>
	
	<!-- User Key 중복 체크 -->
	<select id="checkDuplUserKey" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*)
		FROM tb_user_info
		WHERE user_key = #{userKey}
	</select>
	
	<!-- 회원등록 -->
	<insert id="join" parameterType="java.util.Map">
		INSERT INTO tb_user_info
		(
			EMAIL
			, NICKNAME
			, USER_KEY
			, GRADE
			, POINT
			, USED_POINT
			, THWD	
			, SVC_AGREE_YN
			, LOGIN_FAIL_CNT
			, AUTH_TASK
			, AUTH_MENU
			, CR_DT
			, UP_DT
		)
		VALUES
		(
			#{email}
			, #{nickname}
			, #{userKey}
			, 'N'
			, 0
			, 0
			, #{thwd}
			, 'N'
			, 0
			, 'normal'
			, 'normal'
			, DATE(NOW())
			, DATE(NOW())
		)
	</insert>
	
	<!-- 회원등록 (naver) -->
	<insert id="insertNaverUser" parameterType="java.util.Map">
		INSERT INTO tb_user_info_naver
		(
			  USER_ID
			, USER_NO
			, EMAIL
			, NICKNAME					
			, CR_DT
			, UP_DT
		)
		VALUES
		(
			  #{user_id}
			, #{user_no}
			, #{email}
			, #{nickname}
			, DATE(NOW())
			, DATE(NOW())
		)
	</insert>
	
	<!-- 회원등록 (kakao) -->
	<insert id="insertKakaoUser" parameterType="java.util.Map">
		INSERT INTO tb_user_info_kakao
		(
			  USER_ID
			, USER_NO
			, EMAIL
			, EMAIL_VERIFY_YN
			, NICKNAME
			, THUMBNAIL_IMAGE
			, CR_DT
			, UP_DT
		)
		VALUES
		(
			  #{user_id}
			, #{user_no}
			, #{email}
			, #{email_varify_yn}
			, #{nickname}
			, #{thumbnail_image}
			, DATE(NOW())
			, DATE(NOW())
		)
	</insert>
	
	<!-- SMS 사용자 등록여부 체크 -->
	<select id="checkDuplSnsNaver" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*)
		FROM tb_user_info_naver
		WHERE user_id = #{user_id}
	</select>
	
</mapper>