<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">  
  
<mapper namespace="sysmngMapper">
	
	<!-- 사용자 목록 조회 -->
	<select id="getUserList" parameterType="java.util.Map" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		/* sysmng.getUserList */		
		SELECT *
		FROM
		(
			SELECT 
				  user_no
				, email
				, nickname
				, grade
				, point
				, used_point
				, mbtlnum
				, thwd
				, ifnull(thwd_q,'') thwd_q 
				, ifnull(thwd_a,'') thwd_a
				, ifnull(rcmd_user_no, 0) rcmd_user_no 
				, svc_agree_yn
				, login_fail_cnt
				, auth_task
				, F_GETAUTHNM(auth_task) auth_task_nm
				, auth_menu
				, F_GETAUTHNM(auth_menu) auth_menu_nm
				, ifnull(use_yn, 'N') use_yn
				, CASE 
					WHEN ifnull(use_yn, 'N') = 'Y' THEN '사용'
					ELSE '미사용'
				  END use_yn_nm 
				, cr_dt
				, up_dt
				, @rownum := @rownum+1 AS row_num
			FROM TB_USER_INFO, (SELECT @rownum :=0) AS R		
			WHERE 1=1
			<if test='search_key!=""'>		
				AND email = #{search_key}
			</if>	
			<if test='auth_task!=""'>		
				AND auth_task = #{auth_task}			
			</if>
			ORDER BY 
			<if test='sidx!=null and sidx != ""'> 
				<if test='sidx=="usr_id"'>
					 email 
				</if>
				<if test='sidx=="use_yn"'>
					 use_yn 
				</if>
				<if test='sidx=="email"'>
					 email 
				</if>
				<if test='sidx=="auth_task"'>
					 auth_task 
				</if>
				<if test='sidx=="auth_menu"'>
					 auth_menu 
				</if>
			</if>
			<if test='sord != null and sord != ""'>
				<if test='sord == "ASC" or sord == "asc" '>
					ASC 
				</if>
				<if test='sord == "DESC" or sord == "desc" '>
					DESC 
				</if>
			</if>
		) AA
		<if test='page!="" and scale!=""'>
		WHERE row_num BETWEEN #{page} AND #{scale}
		</if>
	</select>
	
	<!-- 사용자 목록 조회 -->
	<select id="getUserList2" parameterType="java.util.Map" resultType="userInfoDto">
		/* sysmng.getUserList */		
		SELECT *
		FROM
		(
			SELECT 
				  user_no
				, email
				, nickname
				, grade
				, point
				, used_point
				, mbtlnum
				, thwd
				, ifnull(thwd_q,'') thwd_q 
				, ifnull(thwd_a,'') thwd_a
				, ifnull(rcmd_user_no, 0) rcmd_user_no 
				, svc_agree_yn
				, login_fail_cnt
				, auth_task
				, F_GETAUTHNM(auth_task) auth_task_nm
				, auth_menu
				, F_GETAUTHNM(auth_menu) auth_menu_nm
				, ifnull(use_yn, 'N') use_yn
				, CASE 
					WHEN ifnull(use_yn, 'N') = 'Y' THEN '사용'
					ELSE '미사용'
				  END use_yn_nm 
				, cr_dt
				, up_dt
				, @rownum := @rownum+1 AS row_num
			FROM TB_USER_INFO, (SELECT @rownum :=0) AS R		
			WHERE 1=1
			<if test='search_key!=""'>		
				AND email = #{search_key}
			</if>	
			<if test='auth_task!=""'>		
				AND auth_task = #{auth_task}			
			</if>
			ORDER BY 
			<if test='sidx!=null and sidx != ""'> 
				<if test='sidx=="usr_id"'>
					 email 
				</if>
				<if test='sidx=="use_yn"'>
					 use_yn 
				</if>
				<if test='sidx=="email"'>
					 email 
				</if>
				<if test='sidx=="auth_task"'>
					 auth_task 
				</if>
				<if test='sidx=="auth_menu"'>
					 auth_menu 
				</if>
			</if>
			<if test='sord != null and sord != ""'>
				<if test='sord == "ASC" or sord == "asc" '>
					ASC 
				</if>
				<if test='sord == "DESC" or sord == "desc" '>
					DESC 
				</if>
			</if>
		) AA
		<if test='page!="" and scale!=""'>
		WHERE row_num BETWEEN #{page} AND #{scale}
		</if>
	</select>
	
	<!-- 사용자 목록 건수 조회 -->
	<select id="getUserListCnt" parameterType="java.util.Map" resultType="int">		
		/* sysmng.getUserListCnt */
		SELECT 
			  COUNT(*)
		FROM TB_USER_INFO
		WHERE 1=1
		<if test='search_key!=""'>		
			AND email = #{search_key}
		</if>	
		<if test='auth_task!=""'>		
			AND auth_task = #{auth_task}			
		</if>
	</select>
	
		
	<!-- 사용자정보 등록 -->
	<select id="createUserInfo" statementType="CALLABLE" parameterType="userInfoDto" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		{CALL PW_USERINFO_I (
			#{reg_user_no}, #{access_ip}, 
			#{email}, #{nickname}, #{mbtlnum}, #{rcmd_user_no}, #{svc_agree_yn}
			)} 
	</select>
	
	<!-- 사용자정보 수정 -->
	<select id="modifyUserInfo" statementType="CALLABLE" parameterType="userInfoDto" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		{CALL PW_USERINFO_U (
			#{reg_user_no}, #{access_ip}, 
			#{user_no}, #{nickname}, #{mbtlnum}, #{auth_task}, #{auth_menu}, #{use_yn}
			)} 
	</select>
	
	<!-- 사용자정보 삭제 -->
	<select id="deleteUserInfo" statementType="CALLABLE" parameterType="userInfoDto" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		{CALL PW_USERINFO_D (#{reg_user_no}, #{access_ip}, #{user_no})}
	</select>
	
	<!-- 당첨번호 목록 조회 -->
	<select id="getWinDataList" parameterType="winDataDto" resultType="winDataDto">
		/* sysmng.getWinDataList */		
		SELECT *
		FROM
		(
			SELECT 
				  WIN_COUNT
				, NUM1
				, NUM2
				, NUM3
				, NUM4
				, NUM5
				, NUM6
				, BONUS_NUM
				, TOTAL
				, SUM_END_NUM
				, LOW_HIGH
				, ODD_EVEN
				, AC
				, @rownum := @rownum+1 AS row_num
			FROM TB_LOTTO_INFO, (SELECT @rownum :=0) AS R		
			WHERE 1=1
			<if test='win_count != null and win_count != "" and win_count != 99999999'>
			AND WIN_COUNT = #{win_count}
			</if>
			ORDER BY WIN_COUNT DESC
		) AA
		<if test='startNum != "" and endNum != ""'>
		WHERE row_num BETWEEN #{startNum} AND #{endNum}
		</if>
	</select>
	
	<!-- 당첨번호 목록 건수 조회 -->
	<select id="getWinDataListCnt" parameterType="winDataDto" resultType="Integer">
		/* sysmng.getWinDataListCnt */
		SELECT COUNT(*)				
		FROM TB_LOTTO_INFO
		WHERE 1=1
		<if test='win_count != null and win_count != "" and win_count != 99999999'>
		AND WIN_COUNT = #{win_count}
		</if>	
	</select>
	
	<!-- 당첨번호 목록 등록 -->
	<insert id="insertWinDataList" parameterType="java.util.Map">
		/* sysmng.insertWinDataList */
		INSERT INTO TB_LOTTO_INFO (WIN_COUNT,NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,BONUS_NUM,TOTAL,SUM_END_NUM,LOW_HIGH,ODD_EVEN,AC)
		VALUES 
		<foreach collection="list" item="item" open="" separator="," close="">
		(#{item.win_count},#{item.num1},#{item.num2},#{item.num3},#{item.num4},#{item.num5},#{item.num6},#{item.bonus_num},#{item.total},#{item.sum_end_num},#{item.low_high},#{item.odd_even},#{item.ac})
		</foreach>
	</insert>
	
	<!-- 당첨번호 조회 -->
	<select id="getWinData" resultType="winDataDto">
		/* sysmng.getWinData */
		SELECT *		
		FROM TB_LOTTO_INFO
		WHERE WIN_COUNT = #{win_count}			
	</select>
	
	<!-- 마지막 당첨번호 조회 -->
	<select id="getLastWinData" resultType="winDataDto">
		/* sysmng.getLastWinData */
		SELECT *		
		FROM TB_LOTTO_INFO
		ORDER BY WIN_COUNT DESC
		LIMIT 1			
	</select>
	
	<!-- 당첨번호 등록 -->
	<insert id="insertWinData" parameterType="winDataDto">
		/* sysmng.insertWinData */
		INSERT INTO TB_LOTTO_INFO (WIN_COUNT,NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,BONUS_NUM,TOTAL,SUM_END_NUM,LOW_HIGH,ODD_EVEN,AC)
		VALUES (#{win_count},#{num1},#{num2},#{num3},#{num4},#{num5},#{num6},#{bonus_num},#{total},#{sum_end_num},#{low_high},#{odd_even},#{ac})
	</insert>
	
	<!-- 당첨번호 수정 -->
	<update id="modifyWinData" parameterType="java.util.Map">		
		/* sysmng.modifyWinData */
		UPDATE TB_LOTTO_INFO
		SET   NUM1 = #{num1}
			, NUM2 = #{num2}
			, NUM3 = #{num3}
			, NUM4 = #{num4}
			, NUM5 = #{num5}
			, NUM6 = #{num6}
			, BONUS_NUM = #{bonus_num}
			, TOTAL = #{total}
			, SUM_END_NUM = #{sum_end_num}
			, LOW_HIGH = #{low_high}
			, ODD_EVEN = #{odd_even}
			, AC = #{ac}
		WHERE WIN_COUNT = #{win_count}
	</update>
	
	<!-- 당첨번호 삭제 -->
	<delete id="deleteWinData" parameterType="java.util.Map">		
		/* sysmng.deleteWinData */
		DELETE TB_LOTTO_INFO
		WHERE WIN_COUNT = #{win_count}
	</delete>
	
	<!-- 회차합정보 등록 -->
	<insert id="insertCountSumInfo" parameterType="countSumDto">
		/* sysmng.insertCountSumInfo */
		INSERT INTO TB_COUNT_SUM_INFO (WIN_COUNT,COUNT_SUM,CONT_CNT,NOT_CONT_CNT,CONT_NUM,NOT_CONT_NUM)
		VALUES (#{win_count},#{count_sum},#{cont_cnt},#{not_cont_cnt},#{cont_num},#{not_cont_num})
	</insert>
	
	<!-- 권한코드 목록 조회 -->
	<select id="getAuthCodeList" parameterType="java.util.Map" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">		
		/* sysmng.getAuthCodeList */
		SELECT *
		FROM
		(
			SELECT 
				  auth_cd
				, auth_nm
				, use_yn
				, @rownum := @rownum+1 AS row_num
			FROM TB_AUTH_CODE, (SELECT @rownum :=0) AS R
			WHERE 1=1
			<if test='search_key!=""'>		
				AND (auth_cd = #{search_key} or auth_nm like '%'+#{search_key}+'%')
			</if>	
			ORDER BY 
			<if test='sidx!=null and sidx != ""'> 
				<if test='sidx=="auth_cd"'>
					 auth_cd 
				</if>
				<if test='sidx=="auth_nm"'>
					 auth_nm 
				</if>
			</if>
			<if test='sord != null and sord != ""'>
				<if test='sord == "ASC" or sord == "asc" '>
					ASC 
				</if>
				<if test='sord == "DESC" or sord == "desc" '>
					DESC 
				</if>
			</if>
		) AA
		<if test='page!="" and scale!=""'>
		WHERE row_num BETWEEN #{page} AND #{scale}
		</if>
	</select>
	
	<!-- 권한코드 목록 건수 조회 -->
	<select id="getAuthCodeListCnt" parameterType="java.util.Map" resultType="int">		
		/* sysmng.getAuthCodeListCnt */
		SELECT 
			  COUNT(*)
		FROM TB_AUTH_CODE
		WHERE 1=1
		<if test='search_key!=""'>		
			AND (auth_cd = #{search_key} or auth_nm like '%'+#{search_key}+'%')
		</if>	
	</select>
	
	<!-- 업무권한정보 목록 조회 -->
	<select id="getAuthTaskInfoList" parameterType="java.util.Map" resultType="taskInfoDto">		
		/* sysmng.getAuthTaskInfoList */
		SELECT 
			  tti.task_1_cd
			, tti.task_2_cd
			, tti.task_1_nm
			, tti.task_2_nm
			, ttig.cnt
			, tti.sort
			<if test='auth_cd!=""'>
			, F_ISTASKAUTHINFO(#{auth_cd}, tti.task_1_cd, tti.task_2_cd) as checked
			</if>
			<if test='auth_cd==""'>
			, 'N' as checked
			</if>
			, tti.use_yn
		FROM TB_TASK_INFO tti		
		LEFT OUTER JOIN (
			SELECT
				task_1_cd				
				, COUNT(task_1_cd) as cnt
			FROM TB_TASK_INFO 
			GROUP BY task_1_cd
			) ttig ON tti.task_1_cd = ttig.task_1_cd
		ORDER BY tti.sort		
	</select>
	
	<!-- 권한코드 중복체크 -->
	<select id="dupCheckAuthCode" parameterType="java.util.Map" resultType="int">		
		/* sysmng.dupCheckAuthCode */
		SELECT 
			  COUNT(*)
		FROM TB_AUTH_CODE
		WHERE 1=1
		AND auth_cd = #{auth_cd}			
	</select>
	
	<!-- 권한코드 등록 -->
	<insert id="createAuthCode" parameterType="java.util.Map">		
		/* sysmng.createAuthCode */
		INSERT INTO TB_AUTH_CODE (auth_cd, auth_nm)
		VALUES (#{auth_cd}, #{auth_nm})			
	</insert>
	
	<!-- 권한코드 수정 -->
	<update id="modifyAuthCode" parameterType="java.util.Map">		
		/* sysmng.modifyAuthCode */
		UPDATE TB_AUTH_CODE
		SET auth_cd = #{auth_cd}
			, auth_nm = #{auth_nm}
		WHERE auth_cd = #{bf_auth_cd}
	</update>
	
	<!-- 권한코드 삭제 -->
	<delete id="deleteAuthCode" parameterType="java.util.Map">		
		/* sysmng.deleteAuthCode */
		DELETE FROM TB_AUTH_CODE
		WHERE auth_cd = #{auth_cd}
	</delete>
	
	<!-- 기존 업무권한 매핑정보 삭제 -->
	<delete id="deleteTaskAuthInfo" parameterType="java.util.Map">		
		/* sysmng.deleteTaskAuthInfo */
		DELETE FROM TB_TASK_AUTHINFO		
		WHERE auth_cd = #{auth_cd}
	</delete>
	
	<!-- 업무권한 매핑정보 저장 -->
	<insert id="saveTaskAuthInfo" parameterType="java.util.Map">	
		/* sysmng.saveTaskAuthInfo */
		<foreach collection="list" item="item">
		INSERT INTO TB_TASK_AUTHINFO (auth_cd, depth_1_cd, depth_2_cd, task_1_cd, task_2_cd)
		VALUES (
			#{item.auth_cd}
			, LOWER(F_GETDEPTH1MENU(#{item.task_1_cd}))
			, LOWER(F_GETDEPTH2MENU(#{item.task_1_cd}))
			, LOWER(#{item.task_1_cd})
			<if test='item.task_2_cd == null or item.task_2_cd == ""'>
			, LOWER(F_GETTASK2CD(#{item.task_1_cd}))
			</if>
			<if test='item.task_2_cd != null and item.task_2_cd != ""'>
			, LOWER(#{item.task_2_cd})
			</if>
		)
		</foreach>	
	</insert>
	
	<!-- 메뉴권한정보 목록 조회 -->
	<select id="getAuthMenuInfoList" parameterType="java.util.Map" resultType="menuInfoDto">		
		/* sysmng.getAuthMenuInfoList */
		select 
			  tmi.menu_id
			, tmi.p_menu_id
			, tmi.menu_nm
			, tmi.menu_url
			, tmi.menu_order
			, ifnull(tmicnt.cnt, 0) cnt
			<if test='auth_cd!=""'>
			, CASE 
				WHEN ifnull(tmai.auth_cd,'') != '' THEN 'Y'
				ELSE 'N'
			  END checked
			</if>
			<if test='auth_cd==""'>
			, 'N' as checked
			</if>
			, tmi.use_yn
		from tb_menu_info tmi
		<if test='auth_cd!=""'>
		LEFT OUTER JOIN 
		(
			select auth_cd, menu_id
			from tb_menu_authinfo
			where auth_cd = #{auth_cd}
		) tmai ON tmi.menu_id = tmai.menu_id
		</if>
		LEFT OUTER JOIN 
		(
			select p_menu_id
				, COUNT(p_menu_id) cnt
			from tb_menu_info
			where use_yn = 'Y'
			group by p_menu_id
		) tmicnt ON tmi.menu_id = tmicnt.p_menu_id
		WHERE tmi.menu_id != 0
		AND tmi.use_yn = 'Y'
		order by tmi.menu_order		
	</select>
	
	<!-- 기존 메뉴권한 매핑정보 삭제 -->
	<delete id="deleteMenuAuthInfo" parameterType="java.util.Map">		
		/* sysmng.deleteMenuAuthInfo */
		DELETE FROM TB_MENU_AUTHINFO		
		WHERE auth_cd = #{auth_cd}
	</delete>
	
	<!-- 메뉴권한 매핑정보 저장 -->
	<insert id="saveMenuAuthInfo" parameterType="java.util.Map">	
		/* sysmng.saveMenuAuthInfo */
		<foreach collection="list" item="item">
		INSERT INTO TB_Menu_AUTHINFO (auth_cd, menu_id)
		VALUES (#{item.auth_cd}, #{item.menu_id})
		
		</foreach>	
	</insert>
</mapper>
