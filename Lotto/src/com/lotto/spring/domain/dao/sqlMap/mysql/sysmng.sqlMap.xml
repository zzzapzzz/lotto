<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">  
  
<mapper namespace="sysmngMapper">
	
	<!-- 사용자 정보 조회 -->
	<select id="getUserInfo" parameterType="userInfoDto" resultType="userInfoDto">
		/* sysmng.getUserInfo */
		SELECT 
			  ui.user_no
			, ui.email
			, ui.nickname
			, ui.user_key
			, ui.grade
			, ui.point
			, ui.used_point
			, ui.mbtlnum
			, ui.thwd
			, ifnull(ui.thwd_q,'') thwd_q 
			, ifnull(ui.thwd_a,'') thwd_a
			, ifnull(ui.rcmd_user_no, 0) rcmd_user_no 
			, ui.svc_agree_yn
			, ui.login_fail_cnt
			, ui.auth_task
			, IFNULL(ac1.auth_nm, '') auth_task_nm
			, ui.auth_menu
			, IFNULL(ac2.auth_nm, '') auth_menu_nm
			, ifnull(ui.use_yn, 'N') use_yn
			, CASE 
				WHEN ifnull(ui.use_yn, 'N') = 'Y' THEN '사용'
				ELSE '미사용'
			  END use_yn_nm 
			, ui.cr_dt
			, ui.up_dt
		FROM tb_user_info ui
		left outer join tb_auth_code ac1 on ui.auth_task = ac1.auth_cd
		left outer join tb_auth_code ac2 on ui.auth_menu = ac2.auth_cd		
		WHERE ui,user_no = #{user_no}			
	</select>
			
	<!-- 사용자 목록 조회 -->
	<select id="getUserList" parameterType="java.util.Map" resultType="userInfoDto">
		/* sysmng.getUserList */		
		SELECT 
			  AA.*
			, IFNULL(ac1.auth_nm, '') auth_task_nm
			, IFNULL(ac2.auth_nm, '') auth_menu_nm
			, CASE 
				WHEN AA.use_yn = 'Y' THEN '사용'
				ELSE '미사용'
			  END use_yn_nm			
		FROM
		(
			SELECT 
				  user_no
				, email
				, nickname
				, grade
				, point
				, used_point
				, mbtlnum
				, thwd
				, ifnull(thwd_q,'') thwd_q 
				, ifnull(thwd_a,'') thwd_a
				, ifnull(rcmd_user_no, 0) rcmd_user_no 
				, svc_agree_yn
				, login_fail_cnt
				, auth_task
				, auth_menu
				, ifnull(use_yn, 'N') use_yn				 
				, cr_dt
				, up_dt
				, @rownum := @rownum+1 AS row_num
			FROM tb_user_info, (SELECT @rownum :=0) AS R		
			WHERE 1=1
			<if test='search_key!=""'>		
				AND email = #{search_key}
			</if>	
			<if test='auth_task!=""'>		
				AND auth_task = #{auth_task}			
			</if>
			ORDER BY 
			<if test='sidx!=null and sidx != ""'> 
				<if test='sidx=="usr_id"'>
					 email 
				</if>
				<if test='sidx=="use_yn"'>
					 use_yn 
				</if>
				<if test='sidx=="email"'>
					 email 
				</if>
				<if test='sidx=="auth_task"'>
					 auth_task 
				</if>
				<if test='sidx=="auth_menu"'>
					 auth_menu 
				</if>
			</if>
			<if test='sord != null and sord != ""'>
				<if test='sord == "ASC" or sord == "asc" '>
					ASC 
				</if>
				<if test='sord == "DESC" or sord == "desc" '>
					DESC 
				</if>
			</if>
		) AA
		left outer join tb_auth_code ac1 on AA.auth_task = ac1.auth_cd
		left outer join tb_auth_code ac2 on AA.auth_menu = ac2.auth_cd
		<if test='startNum!="" and endNum!=""'>
		WHERE row_num BETWEEN #{startNum} AND #{endNum}
		</if>
	</select>
	
	<!-- 사용자 목록 건수 조회 -->
	<select id="getUserListCnt" parameterType="java.util.Map" resultType="int">		
		/* sysmng.getUserListCnt */
		SELECT 
			  COUNT(*)
		FROM tb_user_info
		WHERE 1=1
		<if test='search_key!=""'>		
			AND email = #{search_key}
		</if>	
		<if test='auth_task!=""'>		
			AND auth_task = #{auth_task}			
		</if>
	</select>
	
		
	<!-- 사용자정보 등록 -->
	<select id="createUserInfo" statementType="CALLABLE" parameterType="userInfoDto" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		{CALL PW_USERINFO_I (
			#{reg_user_no}, #{access_ip}, 
			#{email}, #{nickname}, #{mbtlnum}, #{rcmd_user_no}, #{svc_agree_yn}
			)} 
	</select>
	
	<!-- 사용자정보 수정 -->
	<select id="modifyUserInfo" statementType="CALLABLE" parameterType="userInfoDto" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		{CALL PW_USERINFO_U (
			#{reg_user_no}, #{access_ip}, 
			#{user_no}, #{nickname}, #{mbtlnum}, #{auth_task}, #{auth_menu}, #{use_yn}
			)} 
	</select>
	
	<!-- 사용자정보 삭제 -->
	<select id="deleteUserInfo" statementType="CALLABLE" parameterType="userInfoDto" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		{CALL PW_USERINFO_D (#{reg_user_no}, #{access_ip}, #{user_no})}
	</select>
	
	<!-- 당첨번호 목록 조회 -->
	<select id="getWinDataList" parameterType="winDataDto" resultType="winDataDto">
		/* sysmng.getWinDataList */		
		SELECT *
		FROM
		(
			SELECT 
				  WIN_COUNT
				, NUM1
				, NUM2
				, NUM3
				, NUM4
				, NUM5
				, NUM6
				, BONUS_NUM
				, TOTAL
				, SUM_END_NUM
				, LOW_HIGH
				, ODD_EVEN
				, AC
				, DATE_FORMAT(CR_DT, '%Y%m%d%H%i%s') AS CR_DT
				, DATE_FORMAT(UP_DT, '%Y%m%d%H%i%s') AS UP_DT
				, @rownum := @rownum+1 AS row_num
			FROM tb_lotto_info, (SELECT @rownum :=0) AS R		
			WHERE 1=1
			<if test='win_count != null and win_count != "" and win_count != 99999999'>
			AND WIN_COUNT = #{win_count}
			</if>			
			ORDER BY 
			<choose>
    			<when test='sidx!=null and sidx != ""'>
    				${sidx} 
			    </when>
			    <otherwise>
			    	WIN_COUNT 
			    </otherwise>
  			</choose>
			<choose>
    			<when test='sord != null and sord != ""'>
    				${sord} 
			    </when>
			    <otherwise>
			    	DESC 
			    </otherwise>
  			</choose>
		) AA
		<if test='startNum!="" and endNum!=""'>
		WHERE row_num BETWEEN #{startNum} AND #{endNum}
		</if>
	</select>
	
	<!-- 당첨번호 목록 건수 조회 -->
	<select id="getWinDataListCnt" parameterType="winDataDto" resultType="Integer">
		/* sysmng.getWinDataListCnt */
		SELECT COUNT(*)				
		FROM tb_lotto_info
		WHERE 1=1
		<if test='win_count != null and win_count != "" and win_count != 99999999'>
		AND WIN_COUNT = #{win_count}
		</if>	
	</select>
	
	<!-- 당첨번호 전체정보 목록 조회 -->
	<select id="getWinDataAnlyList" parameterType="winDataDto" resultType="winDataAnlyDto">
		/* sysmng.getWinDataAnlyList */		
		SELECT 
			  li.WIN_COUNT
			, li.NUM1
			, li.NUM2
			, li.NUM3
			, li.NUM4
			, li.NUM5
			, li.NUM6
			, li.BONUS_NUM
			, li.TOTAL
			, li.SUM_END_NUM
			, li.LOW_HIGH
			, li.ODD_EVEN
			, li.AC
			, DATE_FORMAT(li.CR_DT, '%Y%m%d%H%i%s') AS CR_DT
			, DATE_FORMAT(li.UP_DT, '%Y%m%d%H%i%s') AS UP_DT
			, csi.COUNT_SUM
			, csi.CONT_CNT
			, csi.NOT_CONT_CNT
		FROM tb_lotto_info li
		LEFT OUTER JOIN tb_count_sum_info csi ON csi.WIN_COUNT = li.WIN_COUNT		
		WHERE 1=1
		<if test='win_count != null and win_count != "" and win_count != 99999999'>
		AND li.WIN_COUNT = #{win_count}
		</if>			
		ORDER BY 
		<choose>
   			<when test='sidx!=null and sidx != ""'>
   				${sidx} 
		    </when>
		    <otherwise>
		    	li.WIN_COUNT 
		    </otherwise>
 			</choose>
		<choose>
   			<when test='sord != null and sord != ""'>
   				${sord} 
		    </when>
		    <otherwise>
		    	DESC 
		    </otherwise>
 			</choose>
	</select>
	
	<!-- 당첨번호 목록 등록 -->
	<insert id="insertWinDataList" parameterType="java.util.Map">
		/* sysmng.insertWinDataList */
		INSERT INTO tb_lotto_info (WIN_COUNT,NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,BONUS_NUM,TOTAL,SUM_END_NUM,LOW_HIGH,ODD_EVEN,AC)
		VALUES 
		<foreach collection="list" item="item" open="" separator="," close="">
		(#{item.win_count},#{item.num1},#{item.num2},#{item.num3},#{item.num4},#{item.num5},#{item.num6},#{item.bonus_num},#{item.total},#{item.sum_end_num},#{item.low_high},#{item.odd_even},#{item.ac})
		</foreach>
	</insert>
	
	<!-- 당첨번호 조회 -->
	<select id="getWinData" resultType="winDataDto">
		/* sysmng.getWinData */
		SELECT *		
		FROM tb_lotto_info
		WHERE WIN_COUNT = #{win_count}			
	</select>
	
	<!-- 마지막 당첨번호 조회 -->
	<select id="getLastWinData" resultType="winDataDto">
		/* sysmng.getLastWinData */
		SELECT *		
		FROM tb_lotto_info
		ORDER BY WIN_COUNT DESC
		LIMIT 1			
	</select>
	
	<!-- 당첨번호 등록 -->
	<insert id="insertWinData" parameterType="winDataDto">
		/* sysmng.insertWinData */
		INSERT INTO tb_lotto_info (WIN_COUNT,NUM1,NUM2,NUM3,NUM4,NUM5,NUM6,BONUS_NUM,TOTAL,SUM_END_NUM,LOW_HIGH,ODD_EVEN,AC)
		VALUES (#{win_count},#{num1},#{num2},#{num3},#{num4},#{num5},#{num6},#{bonus_num},#{total},#{sum_end_num},#{low_high},#{odd_even},#{ac})
	</insert>
	
	<!-- 당첨번호 수정 -->
	<update id="modifyWinData" parameterType="winDataDto">		
		/* sysmng.modifyWinData */
		UPDATE tb_lotto_info
		SET   NUM1 = #{num1}
			, NUM2 = #{num2}
			, NUM3 = #{num3}
			, NUM4 = #{num4}
			, NUM5 = #{num5}
			, NUM6 = #{num6}
			, BONUS_NUM = #{bonus_num}
			, TOTAL = #{total}
			, SUM_END_NUM = #{sum_end_num}
			, LOW_HIGH = #{low_high}
			, ODD_EVEN = #{odd_even}
			, AC = #{ac}
		WHERE WIN_COUNT = #{win_count}
	</update>
	
	<!-- 당첨번호 삭제 -->
	<delete id="deleteWinData" parameterType="winDataDto">		
		/* sysmng.deleteWinData */
		DELETE FROM tb_lotto_info
		<if test='win_count != null and win_count != ""'>
		WHERE WIN_COUNT = #{win_count}
		</if>
	</delete>
	
	<!-- 회차합정보 등록 -->
	<insert id="insertCountSumInfo" parameterType="countSumDto">
		/* sysmng.insertCountSumInfo */
		INSERT INTO tb_count_sum_info (WIN_COUNT,COUNT_SUM,CONT_CNT,NOT_CONT_CNT,CONT_NUM,NOT_CONT_NUM)
		VALUES (#{win_count},#{count_sum},#{cont_cnt},#{not_cont_cnt},#{cont_num},#{not_cont_num})
	</insert>
	
	<!-- 회차합정보 삭제 -->
	<delete id="deleteCountSumInfo" parameterType="countSumDto">
		/* sysmng.deleteCountSumInfo */
		DELETE FROM tb_count_sum_info
		WHERE 1=1
		<if test='win_count != null and win_count != ""'>
		AND WIN_COUNT = #{win_count}
		</if>
	</delete>
	
	<!-- 제외수정보 등록 -->
	<insert id="insertExcludeInfo" parameterType="excludeDto">
		/* sysmng.insertExcludeInfo */
		INSERT INTO tb_exclude_info (EX_COUNT,NUM1_RULE,NUM2_RULE,NUM3_RULE,NUM4_RULE,NUM5_RULE,NUM6_RULE,EXCLUDE_NUM)
		VALUES (#{ex_count},#{num1_rule},#{num2_rule},#{num3_rule},#{num4_rule},#{num5_rule},#{num6_rule},#{exclude_num})
	</insert>
	
	<!-- 제외수정보 삭제 -->
	<delete id="deleteExcludeInfo" parameterType="excludeDto">
		/* sysmng.deleteExcludeInfo */
		DELETE FROM tb_exclude_info
		WHERE 1=1
		<if test='ex_count != null and ex_count != ""'>
		AND EX_COUNT = #{ex_count}
		</if>
	</delete>
	
	<!-- 제외수정보 조회 -->
	<select id="getExcludeInfo" parameterType="exDataDto" resultType="excludeDto">
		/* sysmng.getExcludeInfo */
		SELECT
			  EX_COUNT,NUM1_RULE,NUM2_RULE,NUM3_RULE,NUM4_RULE,NUM5_RULE,NUM6_RULE,EXCLUDE_NUM
		FROM tb_exclude_info
		WHERE EX_COUNT = #{ex_count}
	</select>
	
	<!-- 총합정보 등록 -->
	<insert id="insertTotalInfo" parameterType="totalDto">
		/* sysmng.insertTotalInfo */
		INSERT INTO tb_total_info (
			  WIN_COUNT
			, LOW_TOTAL
			, HIGH_TOTAL
			, TOTAL_RANGE
		)
		VALUES (
			  #{win_count}
			, #{low_total}
			, #{high_total}
			, #{total_range}
			)
	</insert>
	
	<!-- 총합정보 삭제 -->
	<delete id="deleteTotalInfo" parameterType="totalDto">
		/* sysmng.deleteTotalInfo */
		DELETE FROM tb_total_info
		WHERE 1=1
		<if test='win_count != null and win_count != ""'>
		AND WIN_COUNT = #{win_count}
		</if>
	</delete>
	
	<!-- 총합정보 조회 -->
	<select id="getTotalInfo" parameterType="winDataDto" resultType="totalDto">
		/* sysmng.getTotalInfo */
		SELECT
			  WIN_COUNT
			, LOW_TOTAL
			, HIGH_TOTAL
			, TOTAL_RANGE
		FROM tb_total_info
		WHERE WIN_COUNT = #{win_count}
	</select>
	
	<!-- 끝수합정보 등록 -->
	<insert id="insertEndNumInfo" parameterType="endNumDto">
		/* sysmng.insertEndNumInfo */
		INSERT INTO tb_endnum_info (
			  WIN_COUNT
			, LOW_ENDNUM
			, HIGH_ENDNUM
			, ENDNUM_RANGE
		)
		VALUES (
			  #{win_count}
			, #{low_endnum}
			, #{high_endnum}
			, #{endnum_range}
			)
	</insert>
	
	<!-- 끝수합정보 삭제 -->
	<delete id="deleteEndNumInfo" parameterType="endNumDto">
		/* sysmng.deleteEndNumInfo */
		DELETE FROM tb_endnum_info
		WHERE 1=1
		<if test='win_count != null and win_count != ""'>
		AND WIN_COUNT = #{win_count}
		</if>
	</delete>
	
	<!-- 끝수합정보 조회 -->
	<select id="getEndNumInfo" parameterType="winDataDto" resultType="endNumDto">
		/* sysmng.getEndNumInfo */
		SELECT
			  WIN_COUNT
			, LOW_ENDNUM
			, HIGH_ENDNUM
			, ENDNUM_RANGE
		FROM tb_endnum_info
		WHERE WIN_COUNT = #{win_count}
	</select>
	
	<!-- 궁합수정보 등록 -->
	<insert id="insertMCNumInfo" parameterType="java.util.Map">
		/* sysmng.insertMCNumInfo */
		INSERT INTO tb_mcnum_info
		(
			  WIN_COUNT
			, NUM
			, MC_NUM
			, NOT_MC_NUM
		)
		VALUES 
		<foreach collection="mcInfoList" item="element" open="(" separator="),(" close=")">
			  #{element.win_count}
			, #{element.num} 	
			, #{element.mc_num}
			, #{element.not_mc_num}
		</foreach>
	</insert>
	
	<!-- 궁합수정보 삭제 -->
	<delete id="deleteMCNumInfo" parameterType="mcNumDto">
		/* sysmng.deleteMCNumInfo */
		DELETE FROM tb_mcnum_info
		WHERE 1=1
		<if test='win_count != null and win_count != ""'>
		AND WIN_COUNT = #{win_count}
		</if>
	</delete>
	
	<!-- 궁합수 목록 조회 -->
	<select id="getMcNumList" parameterType="winDataDto" resultType="mcNumDto">		
		/* sysmng.getMcNumList */
		SELECT 
			  WIN_COUNT
			, NUM
			, MC_NUM
			, NOT_MC_NUM
		FROM tb_mcnum_info
		WHERE WIN_COUNT = #{win_count}
		ORDER BY NUM
	</select>
	
	<!-- 저고비율정보 등록 -->
	<insert id="insertLowHighInfo" parameterType="java.util.Map">
		/* sysmng.insertLowHighInfo */
		INSERT INTO tb_lowhigh_info
		(
			  WIN_COUNT
			, LOWHIGH_TYPE
			, RATIO
		)
		VALUES 
		<foreach collection="lowHighList" item="element" open="(" separator="),(" close=")">
			  #{element.win_count}
			, #{element.lowhigh_type} 	
			, #{element.ratio}
		</foreach>
	</insert>
	
	<!-- 저고비율정보 삭제 -->
	<delete id="deleteLowHighInfo" parameterType="lowHighDto">
		/* sysmng.deleteLowHighInfo */
		DELETE FROM tb_lowhigh_info
		WHERE 1=1
		<if test='win_count != null and win_count != ""'>
		AND WIN_COUNT = #{win_count}
		</if>
	</delete>
	
	<!-- 홀짝비율정보 등록 -->
	<insert id="insertOddEvenInfo" parameterType="java.util.Map">
		/* sysmng.insertOddEvenInfo */
		INSERT INTO tb_oddeven_info
		(
			  WIN_COUNT
			, ODDEVEN_TYPE
			, RATIO
		)
		VALUES 
		<foreach collection="oddEvenList" item="element" open="(" separator="),(" close=")">
			  #{element.win_count}
			, #{element.oddeven_type} 	
			, #{element.ratio}
		</foreach>
	</insert>
	
	<!-- 홀짝비율정보 삭제 -->
	<delete id="deleteOddEvenInfo" parameterType="oddEvenDto">
		/* sysmng.deleteOddEvenInfo */
		DELETE FROM tb_oddeven_info
		WHERE 1=1
		<if test='win_count != null and win_count != ""'>
		AND WIN_COUNT = #{win_count}
		</if>
	</delete>
	
	<!-- 미출현구간대 정보 등록 -->
	<insert id="insertZeroRangeInfo" parameterType="zeroRangeDto">
		/* sysmng.insertZeroRangeInfo */
		INSERT INTO tb_zero_range_info (
			  WIN_COUNT
			, RANGE1
			, RANGE2
			, RANGE3
			, RANGE4
			, RANGE5
			, ZERO_CNT
			, ZERO_RANGE
		)
		VALUES (
			  #{win_count}
			, #{range1}
			, #{range2}
			, #{range3}
			, #{range4}
			, #{range5}
			, #{zero_cnt}
			, #{zero_range}
		)
	</insert>
	
	<!-- 미출현구간대 정보 삭제 -->
	<delete id="deleteZeroRangeInfo" parameterType="zeroRangeDto">
		/* sysmng.deleteZeroRangeInfo */
		DELETE FROM tb_zero_range_info
		WHERE 1=1
		<if test='win_count != null and win_count != ""'>
		AND WIN_COUNT = #{win_count}
		</if>
	</delete>
	
	<!-- 미출현구간대 정보 조회 -->
	<select id="getZeroRangeInfo" parameterType="winDataDto" resultType="zeroRangeDto">		
		/* sysmng.getZeroRangeInfo */
		SELECT 
			  WIN_COUNT
			, RANGE1
			, RANGE2
			, RANGE3
			, RANGE4
			, RANGE5
			, ZERO_CNT
			, ZERO_RANGE
		FROM tb_zero_range_info
		WHERE WIN_COUNT = #{win_count}		
	</select>
	
	<!-- 미출현구간대 목록 조회 -->
	<select id="getZeroRangeList" parameterType="winDataDto" resultType="zeroRangeDto">		
		/* sysmng.getZeroRangeList */
		SELECT 
			  WIN_COUNT
			, RANGE1
			, RANGE2
			, RANGE3
			, RANGE4
			, RANGE5
			, ZERO_CNT
			, ZERO_RANGE
		FROM tb_zero_range_info
		WHERE 1=1
		<if test='win_count != null and win_count !=""'>
		AND WIN_COUNT = #{win_count}
		</if>
	</select>
	
	<!-- 예상번호 정보 조회 -->
	<select id="getExDataInfo" parameterType="exDataDto" resultType="exDataDto">
		/* sysmng.getExDataInfo */
		SELECT 
			  EX_COUNT
			, NUM1
			, NUM2
			, NUM3
			, NUM4
			, NUM5
			, NUM6
			, TOTAL
			, SUM_END_NUM
			, LOW_HIGH
			, ODD_EVEN
			, AC
			, PTRN_MATCH_CNT
		FROM tb_expt_num		
		WHERE 1=1
		AND EX_COUNT = #{ex_count}
		AND SEQ = #{seq}
	</select>
	
	<!-- 예상번호 목록 조회 -->
	<select id="getExDataList" parameterType="exDataDto" resultType="exDataDto">
		/* sysmng.getExDataList */
		SELECT *
		FROM
		(
			SELECT 
				  EX_COUNT
				, NUM1
				, NUM2
				, NUM3
				, NUM4
				, NUM5
				, NUM6
				, TOTAL
				, SUM_END_NUM
				, LOW_HIGH
				, ODD_EVEN
				, AC
				, PTRN_MATCH_CNT
				, @rownum := @rownum+1 AS row_num
			FROM tb_expt_num, (SELECT @rownum :=0) AS R		
			WHERE 1=1
			AND EX_COUNT = #{ex_count}
			ORDER BY 
			<choose>
    			<when test='sidx!=null and sidx != ""'>
    				${sidx} 
			    </when>
			    <otherwise>
			    	SEQ 
			    </otherwise>
  			</choose>
			<choose>
    			<when test='sord != null and sord != ""'>
    				${sord} 
			    </when>
			    <otherwise>
			    	ASC 
			    </otherwise>
  			</choose>
		) AA
		<if test='startNum!="" and endNum!=""'>
		WHERE row_num BETWEEN #{startNum} AND #{endNum}
		</if>
	</select>
	
	<!-- 예상번호 목록 건수 조회 -->
	<select id="getExDataListCnt" parameterType="exDataDto" resultType="Integer">
		/* sysmng.getExDataListCnt */
		SELECT COUNT(*)				
		FROM tb_expt_num
		WHERE 1=1
		AND EX_COUNT = #{ex_count}
	</select>
	
	<!-- 예상번호 NEW 목록 조회 -->
	<select id="getExDataNewList" parameterType="exDataDto" resultType="exDataDto">
		/* sysmng.getExDataNewList */
		SELECT *
		FROM
		(
			SELECT 
				  EX_COUNT
				, NUM1
				, NUM2
				, NUM3
				, NUM4
				, NUM5
				, NUM6
				, TOTAL
				, SUM_END_NUM
				, LOW_HIGH
				, ODD_EVEN
				, AC
				, PTRN_MATCH_CNT
				, @rownum := @rownum+1 AS row_num
			FROM tb_expt_num_new, (SELECT @rownum :=0) AS R		
			WHERE 1=1
			AND EX_COUNT = #{ex_count}
			ORDER BY 
			<choose>
    			<when test='sidx!=null and sidx != ""'>
    				${sidx} 
			    </when>
			    <otherwise>
			    	SEQ 
			    </otherwise>
  			</choose>
			<choose>
    			<when test='sord != null and sord != ""'>
    				${sord} 
			    </when>
			    <otherwise>
			    	ASC 
			    </otherwise>
  			</choose>
		) AA
		<if test='startNum!="" and endNum!=""'>
		WHERE row_num BETWEEN #{startNum} AND #{endNum}
		</if>
	</select>
	
	<!-- 예상번호 NEW 목록 건수 조회 -->
	<select id="getExDataNewListCnt" parameterType="exDataDto" resultType="Integer">
		/* sysmng.getExDataNewListCnt */
		SELECT COUNT(*)				
		FROM tb_expt_num_new
		WHERE 1=1
		AND EX_COUNT = #{ex_count}
	</select>
	
	<!-- 예상번호 목록 등록 -->
	<insert id="insertExptNumList" parameterType="Map">
		/* sysmng.insertExptNumList */
		INSERT INTO tb_expt_num (
			  EX_COUNT
			, SEQ
			, NUM1
			, NUM2
			, NUM3
			, NUM4
			, NUM5
			, NUM6
			, TOTAL
			, SUM_END_NUM
			, LOW_HIGH
			, ODD_EVEN
			, AC
			, PTRN_MATCH_CNT
		)
		VALUES
		<foreach item="exData" index="index" collection="list" open="" separator="," close="">
		(
			  #{exData.ex_count}
			, #{exData.seq}
			, #{exData.num1}
			, #{exData.num2}
			, #{exData.num3}
			, #{exData.num4}
			, #{exData.num5}
			, #{exData.num6}
			, #{exData.total}
			, #{exData.sum_end_num}
			, #{exData.low_high}
			, #{exData.odd_even}
			, #{exData.ac}
			, #{exData.ptrn_match_cnt}
		)
	</foreach>
	</insert>
	
	<!-- 예상번호 NEW 등록 -->
	<insert id="insertExptNumNew" parameterType="exDataDto">
		/* sysmng.insertExptNumNew */
		INSERT INTO tb_expt_num_new (
			  EX_COUNT
			, SEQ
			, NUM1
			, NUM2
			, NUM3
			, NUM4
			, NUM5
			, NUM6
			, TOTAL
			, SUM_END_NUM
			, LOW_HIGH
			, ODD_EVEN
			, AC
			, PTRN_MATCH_CNT
		)
		VALUES
		(
			  #{ex_count}
			, #{seq}
			, #{num1}
			, #{num2}
			, #{num3}
			, #{num4}
			, #{num5}
			, #{num6}
			, #{total}
			, #{sum_end_num}
			, #{low_high}
			, #{odd_even}
			, #{ac}
			, #{ptrn_match_cnt}
		)
	</insert>
	
	<!-- 예상번호 NEW 검증로그 등록 -->
	<insert id="insertExptNumNewVari" parameterType="java.util.Map">
		/* sysmng.insertExptNumNewVari */
		INSERT INTO tb_expt_num_new_vari (
			  NUMBERS
			, COMMENTS			
		)
		VALUES
		(
			  #{numbers}
			, #{comments}			
		)
	</insert>
	
	<!-- 예상번호 NEW 삭제 -->
	<delete id="deleteExptNumNew" parameterType="exDataDto">
		/* sysmng.deleteExptNumNew */
		DELETE FROM tb_expt_num_new
		WHERE EX_COUNT = #{ex_count}
	</delete>
	
	<!-- 예상번호 NEW 검증 삭제 -->
	<delete id="deleteExptNumNewVari" parameterType="exDataDto">
		/* sysmng.deleteExptNumNewVari */
		DELETE FROM tb_expt_num_new_vari		
	</delete>
	
	<!-- 과거 예상번호 목록 삭제 -->
	<delete id="deletePastExptNumList" parameterType="Map">
		/* sysmng.deletePastExptNumList */
		<![CDATA[
		DELETE FROM tb_expt_num
		WHERE EX_COUNT <= #{past_ex_count}
		]]>
	</delete>
	
	<!-- 예상번호 목록 삭제 -->
	<delete id="deleteExptNumList" parameterType="Map">
		/* sysmng.deleteExptNumList */
		<![CDATA[
		DELETE FROM tb_expt_num
		WHERE EX_COUNT = #{ex_count}
		]]>
	</delete>
	
	<!-- 총합 출현건수 조회 -->
	<select id="getTotalGroupSumCnt" parameterType="java.util.Map" resultType="Integer">
		/* sysmng.getTotalGroupSumCnt */
		<![CDATA[
		SELECT IFNULL(SUM(CNT),0) CNT
		FROM
		(
			SELECT TOTAL, COUNT(TOTAL) CNT
			FROM tb_lotto_info
			GROUP BY TOTAL
			HAVING COUNT(TOTAL) < #{cnt}
			ORDER BY TOTAL
		) A
		]]>
	</select>
	
	<!-- 총합 출현건수 목록 조회 -->
	<select id="getTotalGroupCntList" parameterType="java.util.Map" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		/* sysmng.getTotalGroupCntList */
		<![CDATA[
		SELECT TOTAL, COUNT(TOTAL) CNT
		FROM tb_lotto_info
		GROUP BY TOTAL
		HAVING COUNT(TOTAL) >= #{cnt}
		ORDER BY TOTAL
		]]>
	</select>
	
	<!-- 끝수합 출현건수 조회 -->
	<select id="getEndnumGroupSumCnt" parameterType="java.util.Map" resultType="Integer">
		/* sysmng.getEndnumGroupSumCnt */
		<![CDATA[
		SELECT IFNULL(SUM(CNT),0) CNT
		FROM
		(
			SELECT SUM_END_NUM, COUNT(SUM_END_NUM) CNT
			FROM tb_lotto_info
			GROUP BY SUM_END_NUM
			HAVING COUNT(SUM_END_NUM) < #{cnt}
			ORDER BY SUM_END_NUM
		) A
		]]>
	</select>
	
	<!-- 끝수합 출현건수 목록 조회 -->
	<select id="getEndnumGroupCntList" parameterType="java.util.Map" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		/* sysmng.getEndnumGroupCntList */
		<![CDATA[
		SELECT SUM_END_NUM, COUNT(SUM_END_NUM) CNT
		FROM tb_lotto_info
		GROUP BY SUM_END_NUM
		HAVING COUNT(SUM_END_NUM) >= #{cnt}
		ORDER BY SUM_END_NUM
		]]>
	</select>
	
	<!-- AC정보 등록 -->
	<insert id="insertAcInfo" parameterType="acDto">
		/* sysmng.insertAcInfo */
		INSERT INTO tb_ac_info (
			  WIN_COUNT
			, LOW_AC
			, HIGH_AC
			, AC_RANGE
		)
		VALUES (
			  #{win_count}
			, #{low_ac}
			, #{high_ac}
			, #{ac_range}
			)
	</insert>
	
	<!-- AC정보 조회 -->
	<select id="getAcInfo" parameterType="winDataDto" resultType="acDto">
		/* sysmng.getAcInfo */
		SELECT
			  WIN_COUNT
			, LOW_AC
			, HIGH_AC
			, AC_RANGE
		FROM tb_ac_info
		WHERE WIN_COUNT = #{win_count}
	</select>
	
	<!-- AC 출현건수 조회 -->
	<select id="getAcGroupSumCnt" parameterType="java.util.Map" resultType="Integer">
		/* sysmng.getAcGroupSumCnt */
		SELECT IFNULL(SUM(CNT),0) CNT
		FROM
		(
			SELECT AC, COUNT(TOTAL) CNT
			FROM tb_lotto_info
			WHERE 1=1
			<if test='win_count != null and win_count !=""'>
		<![CDATA[
			AND WIN_COUNT <= #{win_count}
		]]>
			</if>
			GROUP BY AC
		<![CDATA[
			HAVING COUNT(AC) < #{cnt}
		]]>
			ORDER BY AC
		) A
	</select>
	
	<!-- AC 출현건수 목록 조회 -->
	<select id="getAcGroupCntList" parameterType="java.util.Map" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">
		/* sysmng.getAcGroupCntList */
		SELECT AC, COUNT(AC) CNT
		FROM tb_lotto_info
		WHERE 1=1
			<if test='win_count != null and win_count !=""'>
		<![CDATA[
			AND WIN_COUNT <= #{win_count}
		]]>
			</if>
		GROUP BY AC
		<![CDATA[
		HAVING COUNT(AC) >= #{cnt}
		]]>
		ORDER BY AC
	</select>
	
	<!-- AC정보 삭제 -->
	<delete id="deleteAcInfo" parameterType="acDto">
		/* sysmng.deleteAcInfo */
		DELETE FROM tb_ac_info
		WHERE 1=1
		<if test='win_count != null and win_count != ""'>
		AND WIN_COUNT = #{win_count}
		</if>
	</delete>
	
	<!-- 권한코드 목록 조회 -->
	<select id="getAuthCodeList" parameterType="java.util.Map" resultType="org.apache.commons.collections.map.CaseInsensitiveMap">		
		/* sysmng.getAuthCodeList */
		SELECT *
		FROM
		(
			SELECT 
				  auth_cd
				, auth_nm
				, use_yn
				, @rownum := @rownum+1 AS row_num
			FROM tb_auth_code, (SELECT @rownum :=0) AS R
			WHERE 1=1
			<if test='search_key!=""'>		
				AND (auth_cd = #{search_key} or auth_nm like '%'+#{search_key}+'%')
			</if>	
			ORDER BY 
			<if test='sidx!=null and sidx != ""'> 
				<if test='sidx=="auth_cd"'>
					 auth_cd 
				</if>
				<if test='sidx=="auth_nm"'>
					 auth_nm 
				</if>
			</if>
			<if test='sord != null and sord != ""'>
				<if test='sord == "ASC" or sord == "asc" '>
					ASC 
				</if>
				<if test='sord == "DESC" or sord == "desc" '>
					DESC 
				</if>
			</if>
		) AA
		<if test='startNum!="" and endNum!=""'>
		WHERE row_num BETWEEN #{startNum} AND #{endNum}
		</if>
	</select>
	
	<!-- 권한코드 목록 건수 조회 -->
	<select id="getAuthCodeListCnt" parameterType="java.util.Map" resultType="int">		
		/* sysmng.getAuthCodeListCnt */
		SELECT 
			  COUNT(*)
		FROM tb_auth_code
		WHERE 1=1
		<if test='search_key!=""'>		
			AND (auth_cd = #{search_key} or auth_nm like '%'+#{search_key}+'%')
		</if>	
	</select>
	
	<!-- 업무권한정보 목록 조회 -->
	<select id="getAuthTaskInfoList" parameterType="java.util.Map" resultType="taskInfoDto">		
		/* sysmng.getAuthTaskInfoList */
		SELECT 
			  tti.task_1_cd
			, tti.task_2_cd
			, tti.task_1_nm
			, tti.task_2_nm
			, ttig.cnt
			, tti.sort
			<if test='auth_cd!=""'>
			, if((
					SELECT COUNT(AUTH_CD)
					FROM tb_task_authinfo
					WHERE AUTH_CD = #{auth_cd}
					AND TASK_1_CD = tti.task_1_cd
					AND TASK_2_CD = tti.task_2_cd
				) > 0,'Y','N') as checked
			</if>
			<if test='auth_cd==""'>
			, 'N' as checked
			</if>
			, tti.use_yn
		FROM tb_task_info tti		
		LEFT OUTER JOIN (
			SELECT
				task_1_cd				
				, COUNT(task_1_cd) as cnt
			FROM tb_task_info 
			GROUP BY task_1_cd
			) ttig ON tti.task_1_cd = ttig.task_1_cd
		ORDER BY tti.sort		
	</select>
	
	<!-- 권한코드 중복체크 -->
	<select id="dupCheckAuthCode" parameterType="java.util.Map" resultType="int">		
		/* sysmng.dupCheckAuthCode */
		SELECT 
			  COUNT(*)
		FROM tb_auth_code
		WHERE 1=1
		AND auth_cd = #{auth_cd}			
	</select>
	
	<!-- 권한코드 등록 -->
	<insert id="createAuthCode" parameterType="java.util.Map">		
		/* sysmng.createAuthCode */
		INSERT INTO tb_auth_code (auth_cd, auth_nm)
		VALUES (#{auth_cd}, #{auth_nm})			
	</insert>
	
	<!-- 권한코드 수정 -->
	<update id="modifyAuthCode" parameterType="java.util.Map">		
		/* sysmng.modifyAuthCode */
		UPDATE tb_auth_code
		SET auth_cd = #{auth_cd}
			, auth_nm = #{auth_nm}
		WHERE auth_cd = #{bf_auth_cd}
	</update>
	
	<!-- 권한코드 삭제 -->
	<delete id="deleteAuthCode" parameterType="java.util.Map">		
		/* sysmng.deleteAuthCode */
		DELETE FROM tb_auth_code
		WHERE auth_cd = #{auth_cd}
	</delete>
	
	<!-- 기존 업무권한 매핑정보 삭제 -->
	<delete id="deleteTaskAuthInfo" parameterType="java.util.Map">		
		/* sysmng.deleteTaskAuthInfo */
		DELETE FROM tb_task_authinfo		
		WHERE auth_cd = #{auth_cd}
	</delete>
	
	<!-- 업무권한 매핑정보 저장 -->
	<insert id="saveTaskAuthInfo" parameterType="java.util.Map">	
		/* sysmng.saveTaskAuthInfo */
		<foreach collection="list" item="item">
		INSERT INTO tb_task_authinfo
		(auth_cd, depth_1_cd, depth_2_cd, task_1_cd, task_2_cd)
		VALUES (
			#{item.auth_cd}
			, (
				SELECT 
					LOWER(
					CASE 
						WHEN INSTR(menu_url, #{item.task_1_cd}) = 2 THEN #{item.task_1_cd}
						ELSE REPLACE(REPLACE(menu_url, CONCAT('/',''), ''), '/', '')
					END
					) depth1
				FROM tb_menu_info
				WHERE p_menu_id != 0
				AND INSTR(menu_url, #{item.task_1_cd}) > 0
				LIMIT 1
			)
			, (
				SELECT 
					LOWER(	
					CASE 
						WHEN INSTR(menu_url, #{item.task_1_cd}) = 2 THEN REPLACE(REPLACE(menu_url, CONCAT('/',#{item.task_1_cd}), ''), '/', '')
						ELSE #{item.task_1_cd}
					END
					) depth2
				FROM tb_menu_info
				WHERE p_menu_id != 0
				AND INSTR(menu_url, 'usermng') > 0
				LIMIT 1
			)
			, LOWER(#{item.task_1_cd})
			<if test='item.task_2_cd == null or item.task_2_cd == ""'>
			, (
				SELECT LOWER(TASK_2_CD)
				FROM tb_task_info
				WHERE TASK_1_CD = #{item.task_1_cd}
			)
			</if>
			<if test='item.task_2_cd != null and item.task_2_cd != ""'>
			, LOWER(#{item.task_2_cd})
			</if>
		)
		</foreach>	
	</insert>
	
	<!-- 메뉴권한정보 목록 조회 -->
	<select id="getAuthMenuInfoList" parameterType="java.util.Map" resultType="menuInfoDto">		
		/* sysmng.getAuthMenuInfoList */
		select 
			  tmi.menu_id
			, tmi.p_menu_id
			, tmi.menu_nm
			, tmi.menu_url
			, tmi.menu_order
			, ifnull(tmicnt.cnt, 0) cnt
			<if test='auth_cd!=""'>
			, CASE 
				WHEN ifnull(tmai.auth_cd,'') != '' THEN 'Y'
				ELSE 'N'
			  END checked
			</if>
			<if test='auth_cd==""'>
			, 'N' as checked
			</if>
			, tmi.use_yn
		from tb_menu_info tmi
		<if test='auth_cd!=""'>
		LEFT OUTER JOIN 
		(
			select auth_cd, menu_id
			from tb_menu_authinfo
			where auth_cd = #{auth_cd}
		) tmai ON tmi.menu_id = tmai.menu_id
		</if>
		LEFT OUTER JOIN 
		(
			select p_menu_id
				, COUNT(p_menu_id) cnt
			from tb_menu_info
			where use_yn = 'Y'
			group by p_menu_id
		) tmicnt ON tmi.menu_id = tmicnt.p_menu_id
		WHERE tmi.menu_id != 0
		AND tmi.use_yn = 'Y'
		order by tmi.menu_order		
	</select>
	
	<!-- 기존 메뉴권한 매핑정보 삭제 -->
	<delete id="deleteMenuAuthInfo" parameterType="java.util.Map">		
		/* sysmng.deleteMenuAuthInfo */
		DELETE FROM tb_menu_authinfo		
		WHERE auth_cd = #{auth_cd}
	</delete>
	
	<!-- 메뉴권한 매핑정보 저장 -->
	<insert id="saveMenuAuthInfo" parameterType="java.util.Map">	
		/* sysmng.saveMenuAuthInfo */
		INSERT INTO tb_menu_authinfo (auth_cd, menu_id)
		VALUES (#{auth_cd}, #{menu_id})
	</insert>
	
	<!-- 메뉴권한 매핑정보 목록 저장 -->
	<insert id="saveMenuAuthInfoList" parameterType="java.util.Map">	
		/* sysmng.saveMenuAuthInfoList */
		<foreach collection="list" item="item">
		INSERT INTO tb_menu_authinfo (auth_cd, menu_id)
		VALUES (#{item.auth_cd}, #{item.menu_id})
		
		</foreach>	
	</insert>
	
	<!-- 최근 당첨회차 저고비율 조회 -->
	<select id="getLowHighDataList" parameterType="winDataDto" resultType="lowHighDto">		
		/* sysmng.getLowHighDataList */
		SELECT 
			  WIN_COUNT
			, LOWHIGH_TYPE
			, RATIO
		FROM tb_lowhigh_info
		WHERE WIN_COUNT = #{win_count}		
	</select>
	
	<!-- 최근 당첨회차 홀짝비율 조회 -->
	<select id="getOddEvenDataList" parameterType="winDataDto" resultType="oddEvenDto">		
		/* sysmng.getOddEvenDataList */
		SELECT 
			  WIN_COUNT
			, ODDEVEN_TYPE
			, RATIO
		FROM tb_oddeven_info
		WHERE WIN_COUNT = #{win_count}		
	</select>
	
	<!-- 회차합 조회 -->
	<select id="getCountSumInfo" parameterType="winDataDto" resultType="countSumDto">		
		/* sysmng.getCountSumInfo */
		SELECT 
			  WIN_COUNT
			, COUNT_SUM
			, CONT_CNT
			, NOT_CONT_CNT
			, CONT_NUM
			, NOT_CONT_NUM
		FROM tb_count_sum_info
		WHERE WIN_COUNT = #{win_count}		
	</select>
	
	<!-- 서비스정보 조회 -->
	<select id="getServiceInfo" parameterType="serviceInfoDto" resultType="serviceInfoDto">
		/* sysmng.getServiceInfo */		
		SELECT 
			  SVC_CD
			, SVC_NM
			, SVC_TYPE
			, SVC_BASE_TYPE
			, SVC_BASE_VAL
			, AMOUNT
			, PRMT_CD
			, USE_YN
			, DATE_FORMAT(CR_DT, '%Y%m%d%H%i%s') AS CR_DT
			, DATE_FORMAT(UP_DT, '%Y%m%d%H%i%s') AS UP_DT
		FROM tb_service_info		
		WHERE SVC_CD = #{svc_cd}
	</select>
	
	<!-- 서비스정보 목록 조회 -->
	<select id="getServiceInfoList" parameterType="serviceInfoDto" resultType="serviceInfoDto">
		/* sysmng.getServiceInfoList */		
		SELECT *
		FROM
		(
			SELECT 
				  SVC_CD
				, SVC_NM
				, SVC_TYPE
				, SVC_BASE_TYPE
				, SVC_BASE_VAL
				, AMOUNT
				, PRMT_CD
				, USE_YN
				, DATE_FORMAT(CR_DT, '%Y%m%d%H%i%s') AS CR_DT
				, DATE_FORMAT(UP_DT, '%Y%m%d%H%i%s') AS UP_DT
				, @rownum := @rownum+1 AS row_num
			FROM tb_service_info, (SELECT @rownum :=0) AS R		
			WHERE 1=1
			<if test='svc_cd != null and svc_cd != ""'>
			AND SVC_CD = #{svc_cd}
			</if>			
			<if test='svc_nm != null and svc_nm != ""'>
			AND SVC_NM like '%'+#{svc_nm}+'%'
			</if>			
			ORDER BY 
			<choose>
    			<when test='sidx!=null and sidx != ""'>
    				${sidx} 
			    </when>
			    <otherwise>
			    	SVC_NM 
			    </otherwise>
  			</choose>
			<choose>
    			<when test='sord != null and sord != ""'>
    				${sord} 
			    </when>
			    <otherwise>
			    	ASC 
			    </otherwise>
  			</choose>
		) AA
		<if test='startNum!="" and endNum!=""'>
		WHERE row_num BETWEEN #{startNum} AND #{endNum}
		</if>
	</select>
	
	<!-- 서비스정보 목록 건수 조회 -->
	<select id="getServiceInfoListCnt" parameterType="serviceInfoDto" resultType="Integer">
		/* sysmng.getServiceInfoListCnt */
		SELECT COUNT(*)				
		FROM tb_service_info
		WHERE 1=1
		<if test='svc_cd != null and svc_cd != ""'>
		AND SVC_CD = #{svc_cd}
		</if>			
		<if test='svc_nm != null and svc_nm != ""'>
		AND SVC_NM like '%'+#{svc_nm}+'%'
		</if>
	</select>
	
	<!-- 서비스코드 중복체크 -->
	<select id="dupCheckServiceCode" parameterType="serviceInfoDto" resultType="int">		
		/* sysmng.dupCheckServiceCode */
		SELECT 
			  COUNT(*)
		FROM tb_service_info
		WHERE SVC_CD = #{svc_cd}			
	</select>
	
	<!-- 서비스정보 등록 -->
	<insert id="insertServiceInfo" parameterType="serviceInfoDto">
		/* sysmng.insertServiceInfo */
		INSERT INTO tb_service_info
		(
			SVC_CD,SVC_NM,SVC_TYPE,SVC_BASE_TYPE,SVC_BASE_VAL,AMOUNT,PRMT_CD,USE_YN,CR_DT
		)
		VALUES 
		(
			#{svc_cd},#{svc_nm},#{svc_type},#{svc_base_type},#{svc_base_val},#{amount},#{prmt_cd},#{use_yn},NOW()
		)
	</insert>
	
	<!-- 서비스정보 수정 -->
	<update id="modifyServiceInfo" parameterType="serviceInfoDto">		
		/* sysmng.modifyServiceInfo */
		UPDATE tb_service_info
		SET   SVC_CD = #{svc_cd}
			, SVC_NM = #{svc_nm}
			, SVC_TYPE = #{svc_type}
			, SVC_BASE_TYPE = #{svc_base_type}
			, SVC_BASE_VAL = #{svc_base_val}
			, AMOUNT = #{amount}
			, PRMT_CD = #{prmt_cd}
			, USE_YN = #{use_yn}
			, UP_DT = NOW()
		WHERE SVC_CD = #{svc_cd}
	</update>
	
	<!-- 서비스정보 삭제 -->
	<update id="deleteServiceInfo" parameterType="serviceInfoDto">		
		/* sysmng.deleteServiceInfo */
		UPDATE tb_service_info
		SET USE_YN = 'N'
			, UP_DT = NOW()
		WHERE SVC_CD = #{svc_cd}
	</update>
</mapper>
